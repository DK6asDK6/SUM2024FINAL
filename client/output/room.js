var chsBundled=function(e){"use strict";let t,n,s,o,a,r,l,c,m,i=!1;function d(){let e=s.value;if(s.value="",i&&""!=$("#chars").val()&&""!=e){let n=$("#chars").val();t.send(JSON.stringify({type:"message",author:r,character:n,room:c,message:e}))}else{let n=document.getElementById("chars");if(null!=n.options[0]){let s=n.options[n.selectedIndex].text;""!=r&&""!=e&&t.send(JSON.stringify({type:"message",author:r,character:s,room:c,message:e}))}}}function u(){t=new WebSocket("ws://localhost:8000");let e=document.getElementById("info").textContent.split("/");r=e[0].trim(),c=e[1],e=e[1].split(":"),l=e[1].trim().substring(0,e[1].indexOf("\n")),m=e[0].trim(),console.log("name "+r),console.log("room global "+c),console.log("room "+l),console.log("master "+m),t.onopen=()=>{console.log("open"),t.send(JSON.stringify({type:"Player",name:r,masterName:m})),t.send(JSON.stringify({type:"User",room:c})),setTimeout((()=>{t.send(JSON.stringify({type:"Player",name:r,masterName:m}))}),3e3)},t.onmessage=e=>{!function(e){let t=JSON.parse(e);switch(t.type){case"characters":a=t.characters,document.getElementById("chars").innerHTML="";for(let e of a)document.getElementById("chars").innerHTML+=`\n      <option value=${e}>${e}</option>\n      `;break;case"master":i=!0,document.getElementById("charSelector").innerHTML='\n        <label for="chars">Enter character (you don\'t need to create full character for NPC):</label>\n        <br />\n        <input type="text" name="chars" id="chars" />\n      ';break;case"message":let e=function(e,t,n){let s="ot_mes";return"System"==e.author?s="sys":e.author==t?s="mes":e.author==n?s="mas":e.toMaster?s="to_mas":""!=e.toUser&&(s="to_you"),`\n    <div class=${s}>\n      <div class="mes_user">\n        ${e.char}(${e.author})\n      </div>  \n      <div class="mes_message">\n        ${e.mes}\n      </div>\n    </div>\n    `}(t.message,r,m);t.message.toMaster&&r!=m&&t.message.author!=r||""!=t.message.toUser&&r!=t.message.toUser&&t.message.author!=r||o.insertAdjacentHTML("beforeend",e)}}(e.data)}}function g(){n=document.getElementById("send"),n.addEventListener("click",d),s=document.getElementById("msg"),o=document.getElementById("messager"),u()}return window.onload=g,e.logOut=function(){window.localStorage.clear(),window.sessionStorage.clear()},e.onLoad=g,e}({});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
